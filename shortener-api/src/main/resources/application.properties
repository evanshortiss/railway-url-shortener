# Use the given port and listen on all interfaces. Listening on all interfaces
# enables private networking via IPv6 over the Railway mesh network
quarkus.http.host=0.0.0.0
quarkus.http.port=${PORT}
%dev.quarkus.http.port=8181
%test.quarkus.http.port=8181

# Create an uber jar to support nixpack entrypoint "java -jar target/*.jar"
quarkus.package.type=uber-jar

# Disable testcontainers, since we're using the Railway provided database
quarkus.devservices.enabled=false

# Specify the database type is postgres
quarkus.datasource.db-kind=postgresql

# Use the PG* variables exposed on railway, or locally when starting
# the application using "railway run ./mvnw quarkus:dev"
quarkus.datasource.username=${PGUSER}
quarkus.datasource.password=${PGPASSWORD}
quarkus.datasource.reactive.url=vertx-reactive:postgresql://${PGHOST}:${PGPORT}/${PGDATABASE}

# Create the database schema(s) if missing
quarkus.hibernate-orm.database.generation=update